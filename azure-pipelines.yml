# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

jobs:

  - job: maven_build
    displayName: 'Maven Build'
    steps:
      - task: Maven@3
        displayName: 'Maven pom.xml'
        inputs:
          mavenPomFile: '$(Parameters.mavenPOMFile)'
      - task: Snyk.snyk-security-scan.custom-build-release-task.SnykSecurityScan@1
        displayName: 'Snyk scan for open source vulnerabilities'
        inputs:
          serviceConnectionEndpoint: 'Snyk Connection'
          failOnIssues: false

  - job: manual_approval
    displayName: "Manual Approval"
    dependsOn: maven_build
    pool: server
    steps:
      - task: ManualValidation@0
        timeoutInMinutes: 5
        inputs:
          instructions: "Hi, please validate"
          notifyUsers: 'a.poosa@reply.it'
          onTimeout: reject

  - job: maven_deploy
    displayName: 'Maven Deploy'
    steps:
      - task: Maven@3
        displayName: 'Maven pom.xml'
        inputs:
          goals: 'deploy -s settings.xml'
      - task: CopyFiles@2
        displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
        inputs:
          SourceFolder: '$(system.defaultworkingdirectory)'
          Contents: '**/*.jar'
          TargetFolder: '$(build.artifactstagingdirectory)'
        condition: succeededOrFailed()
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'
        inputs:
          PathtoPublish: target
        condition: succeededOrFailed()